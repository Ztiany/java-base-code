buildscript {

    ext.kotlin_version = '1.5.0'

    repositories {
        mavenCentral()
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url "https://maven.aliyun.com/repository/google" }
        maven { url 'https://dl.google.com/dl/android/maven2/' }
        maven { url 'https://jitpack.io' }
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        //https://github.com/Kotlin/kotlinx.atomicfu
        classpath "org.jetbrains.kotlinx:atomicfu-gradle-plugin:0.14.4"
        //https://kotlinlang.org/docs/reference/compiler-plugins.html
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

group = "com.ztiany"
version = "1.0"

apply plugin: "java"
apply plugin: "kotlin"
apply plugin: 'kotlin-kapt'

//https://kotlinlang.org/docs/reference/compiler-plugins.html
//apply plugin: "kotlin-noarg"
//apply plugin: "kotlin-allopen"
//apply plugin: 'kotlinx-serialization'
//apply plugin: 'kotlinx-atomicfu'

/*noArg {
    annotation("me.ztiany.noarg.NoArg")
    //default is true
    invokeInitializers = true
}*/

repositories {
    mavenCentral()
    maven { url "https://maven.aliyun.com/repository/google" }
    maven { url 'https://dl.google.com/dl/android/maven2/' }
    maven { url 'https://jitpack.io' }
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

sourceSets {
    main.kotlin.srcDirs += [
            //kotlin新特新
            "src/main/01-base",

            //kotlin新特新
            "src/main/02-new",

            //gradle 工具
            "src/main/03-tools",

            //协程
            "src/main/04-coroutines",

            //kotlin 扩展库学习
            "src/main/05-third-libs",

            //imooc教程示例代码
            "src/main/06-imooc",

            //test
            "src/main/07-test",
    ]
}

dependencies {

    def coroutines_version = '1.5.0-RC'
    def arrow_version = "0.13.2"
    def retrofit_version = "2.9.0"

    //test
    testCompile "junit:junit:4.12"
    testCompile "org.jetbrains.kotlin:kotlin-test"

    //kotlin
    compile("org.jetbrains.kotlin:kotlin-stdlib:${rootProject.kotlin_version}")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile "org.jetbrains.kotlin:kotlin-script-runtime:${rootProject.kotlin_version}"
    //kotlin coroutines
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutines_version}"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:${coroutines_version}"

    //kotlin tools
    //https://github.com/JetBrains/kotlin/tree/master/libraries/kotlinx-metadata/jvm
    compile("org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.0.5")
    //https://github.com/Kotlin/kotlinx.serialization
    compile "org.jetbrains.kotlinx:kotlinx-serialization-core:1.0.0-RC"
    //https://github.com/Kotlin/kotlinx.atomicfu
    compile 'org.jetbrains.kotlinx:atomicfu:0.14.4'

    //https://github.com/ReactiveX/RxKotlin
    compile("io.reactivex.rxjava2:rxkotlin:2.3.0")
    compile("io.reactivex.rxjava2:rxjava:2.2.0")

    //https://github.com/square/moshi
    compile("com.squareup.moshi:moshi:1.8.0")
    compile("com.squareup.moshi:moshi-kotlin:1.8.0")
    //kapt("com.squareup.moshi:moshi-kotlin-codegen:1.8.0")

    //https://github.com/enbandari/PortableAndroidHandler
    compile "com.bennyhuo:portable-android-handler:1.0"
    //https://github.com/enbandari/KotlinTuples
    //compile "com.bennyhuo.kotlin:kotlin-tuples:1.0"
    //https://github.com/enbandari/ObjectPropertyDelegate
    //compile "com.bennyhuo.kotlin:opd:1.0-rc-2"
    //https://github.com/enbandari/ReleasableVar
    //compile "com.bennyhuo.kotlin:releasable-nonnull-vars:1.1.0"
    //https://github.com/enbandari/KotlinDeepCopy
    //compile "com.bennyhuo.kotlin:deepcopy-reflect:1.0"
    //compile "com.bennyhuo.kotlin:deepcopy-annotations:1.1.0"
    //kpt "com.bennyhuo.kotlin:deepcopy-compiler:1.1.0"

    //retrofit with coroutine
    compile "com.squareup.retrofit2:retrofit:${retrofit_version}"
    compile "com.squareup.retrofit2:retrofit-mock:${retrofit_version}"
    compile "com.squareup.retrofit2:converter-gson:${retrofit_version}"
    compile 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    //okhttp
    compile "com.squareup.okhttp3:okhttp:4.3.1"
    compile "com.squareup.okhttp3:mockwebserver:4.3.1"

    //arrow
    compile "io.arrow-kt:arrow-core:${arrow_version}"
    //compile "io.arrow-kt:arrow-syntax:${arrow_version}"
    //kapt "io.arrow-kt:arrow-meta:${arrow_version}"

    //https://plugins.jetbrains.com/plugin/10036-mapstruct-support
    //https://github.com/mapstruct/mapstruct
    //https://mapstruct.org/news/2017-09-19-announcing-mapstruct-idea/
    //compile 'org.mapstruct:mapstruct:1.4.2.Final'
    //kapt 'org.mapstruct:mapstruct-processor:1.4.2.Final'
}

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}